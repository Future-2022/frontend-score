{"version":3,"sources":["services/api.js","services/common.js","services/main.js","pages/Home/index.js","pages/Web2/index.js","App.js","serviceWorker.js","index.js"],"names":["restApiSettings","baseURL","process","REACT_APP_API_BASE_URL","alterURL","rawquery","url","a","useBaseURL","axios","method","apiGetHomeData","Home","props","useState","player","setPlayer","average","setAverage","Array","from","length","playerResult","setPlayerResult","color","setColor","lineColor","setLineColor","title","setTile","category","setCategory","fase","setFase","heat","setHeat","need","setNeed","conPlayerResult","playerName","conAverage","conColor","conLineColor","conNeed","conTitle","conCategory","conHeat","conFase","useEffect","interval","setInterval","getData","clearInterval","then","res","console","log","catch","err","error","className","Number","toFixed","map","result","item","Web2","App","location","useLocation","localStorage","setItem","Fragment","exact","to","path","component","isLocalhost","Boolean","window","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","ReactDOM","render","document","getElementById","URL","href","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.3e9199f6.chunk.js","sourcesContent":["export const restApiSettings = {\r\n    // baseURL: process.env.REACT_APP_API_BASE_URL || 'https://babydogedefi.io:8443',\r\n    baseURL: process.env.REACT_APP_API_BASE_URL || 'http://localhost:5000',\r\n    alterURL: process.env.REACT_APP_API_BASE_URL || 'http://localhost:5000',\r\n}","import { getFetch } from \"./fetch\";\r\nimport { restApiSettings } from \"./api\";\r\nimport * as axios from 'axios';\r\n\r\nexport const getLocalToken = () => {\r\n  return localStorage.getItem(\"userInfo\") != null\r\n    ? JSON.parse(localStorage.getItem(\"userInfo\"))\r\n    : null;\r\n};\r\n\r\nexport const setLocalToken = (userInfo) => {\r\n  return localStorage.setItem(\"userInfo\", userInfo);\r\n};\r\n\r\nexport const removeLocalToken = () => {\r\n  localStorage.removeItem(\"userInfo\");\r\n  localStorage.removeItem(\"userId\");\r\n}\r\n\r\nexport const getUserId = () => {\r\n  return localStorage.getItem(\"userId\") != null\r\n    ? JSON.parse(localStorage.getItem(\"userId\"))\r\n    : null;\r\n}\r\n\r\nexport const setUserId = (userId) => {\r\n  return localStorage.setItem(\"userId\", userId);\r\n};\r\n\r\nconst getUrl = function (path, params = {}) {\r\n  const url = new URL(`${restApiSettings.baseURL}${path}`);\r\n  for (let [key, value] of Object.entries(params)) {\r\n    if (value)\r\n      url.searchParams.append(String(key), String(value));\r\n  }\r\n  return url.toString();\r\n};\r\n\r\nexport const query = async function (path, options = {}, useToken = true) {\r\n  if (!options.headers) {\r\n    options.headers = {\r\n      \"Content-Type\": \"application/json\",\r\n      \"Accept\": \"application/json\"\r\n    };\r\n  }\r\n  options.headers = options.headers || {};\r\n  const userInfo = useToken ? getLocalToken() : null;\r\n  const token = (userInfo && userInfo.token);\r\n  if (token) {\r\n    options.headers[\"Authorization\"] = `Bearer ${token}`;\r\n  }\r\n  const url = getUrl(path, options.searchParams || {});\r\n  const fetch = await getFetch(options);;\r\n  const response = await fetch(url, options);\r\n\r\n  console.log(response);\r\n\r\n  if (200 <= response.status && 300 > response.status) {\r\n    if (options && (options.responseType === 'blob')) {\r\n      return response;\r\n    }\r\n    return response.json();\r\n  }\r\n  try {\r\n    const error = await response.json();\r\n    return Promise.reject(new Error(error.errors));\r\n  } catch (error) {\r\n    throw new Error(`HTTP status ${response.status} is not OK`);\r\n  }\r\n};\r\n\r\nexport const jsonQuery = async function (path, method, data, useToken = true) {\r\n  return await query(\r\n    path,\r\n    {\r\n      method,\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        \"Accept\": \"application/json\"\r\n      },\r\n      body: JSON.stringify(data)\r\n    },\r\n    useToken\r\n  );\r\n};\r\n\r\nexport const rawquery = async function (url, useBaseURL = true) {\r\n\r\n  return await axios({\r\n    method: \"get\",\r\n    url: useBaseURL ? restApiSettings.baseURL + url : restApiSettings.alterURL + url,\r\n  });\r\n}\r\n\r\nexport const formdataquery = async function (data, url, useBaseURL = true) {\r\n  return await axios({\r\n    method: \"post\",\r\n    url: useBaseURL ? restApiSettings.baseURL + url : restApiSettings.alterURL + url,\r\n    data: data,\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n  });\r\n}\r\n\r\nexport const jsonFormQuery = async function (path, method, data, useToken = true) {\r\n  return await query(\r\n    path,\r\n    {\r\n      method,\r\n      headers: {\r\n        \"Content-Type\": undefined,\r\n        \"Accept\": \"application/json\"\r\n      },\r\n      body: JSON.stringify(data)\r\n    },\r\n    useToken\r\n  );\r\n};\r\n\r\nexport const fileQuery = function (path, data) {\r\n  var headers = [];\r\n  const userInfo = getLocalToken();\r\n  const token = (userInfo && userInfo.token);\r\n  if (token) {\r\n    headers[\"Authorization\"] = `Bearer ${token}`;\r\n  }\r\n  const url = getUrl(path);\r\n  return axios.post(url, data, {\r\n    headers: {\r\n      ...headers\r\n    }\r\n  })\r\n  // get data\r\n  .then(response => {\r\n    return response.data;\r\n  })\r\n  // add url field\r\n  .then(res => {\r\n    return res\r\n  });\r\n};\r\n","import { jsonQuery, query, getLocalToken, rawquery, formdataquery } from \"./common\";\r\nimport { restApiSettings } from \"./api\";\r\n\r\nexport const getMemberInfoFromLocal = () => {\r\n  const token = getLocalToken();\r\n  const userInfo = token ? token.member : null;\r\n  return userInfo;\r\n}\r\n\r\nexport async function apiGetBrands() {\r\n  return await query(`/InfoAuto/Brands`);\r\n}\r\n\r\nexport async function apiGetBrandDetailByName(searchParams) {\r\n  return await query(`/InfoAuto/BrandByName`, { searchParams });\r\n}\r\n\r\nexport async function apiGetGroupsByBrandName(searchParams) {\r\n  return await query(`/InfoAuto/GroupsByBrandName`, { searchParams });\r\n}\r\n\r\nexport async function apiGetModelsByBrandGroupYear(searchParams) {\r\n  return await query(`/InfoAuto/ModelsByBrandGroupYear`, { searchParams });\r\n}\r\n\r\nexport async function apiGetYearsByBrandId(searchParams) {\r\n  return await query(`/InfoAuto/YearsByBrandId`, { searchParams });\r\n}\r\n\r\nexport async function apiCheckPostalCode(data) {\r\n  return await jsonQuery(`/Leads/PostalCodeExist?number=` + data, 'POST', {}, true);\r\n}\r\n\r\nexport async function apiSearchCarInput(value) {\r\n  return await rawquery(`/InfoAuto/Search?returntype=m&t=` + value);\r\n}\r\n\r\nexport async function apiGetTeamMembers() {\r\n  return await rawquery(\"/about-us\", false);\r\n}\r\n\r\nexport async function apiGetPressList() {\r\n  return await rawquery(\"/press\", false);\r\n}\r\n\r\nexport async function apiPolicyCreate(data) {\r\n\r\n  return fetch(restApiSettings.baseURL + \"/Policies/Create\", {\r\n    method: \"post\",\r\n    body: data\r\n  });\r\n\r\n}\r\n\r\nexport async function apiContact(data) {\r\n  return await formdataquery(data, \"/Contact/Contact\");\r\n}\r\n\r\nexport async function apiGetFAQs() {\r\n  return await rawquery(\"/faqs\", false);\r\n}\r\n\r\nexport async function apiLeadsSignUp(data) {\r\n  return await formdataquery(data, \"/Leads/SignUpData\");\r\n}\r\n\r\nexport async function apiGetBestQuotationData(vehicleID, leadID) {\r\n  return await rawquery(\"/Quotes/ByVehicle/\" + vehicleID + \"/\" + leadID);\r\n}\r\n\r\nexport async function apiGetQuotationData(vehicleID, leadID) {\r\n  return await rawquery(\"/Quotes/ByVehicleAll/\" + vehicleID + \"/\" + leadID);\r\n}\r\n\r\nexport async function apiGetVehicleData(vehicleID) {\r\n  return await rawquery(\"/Vehicles/\" + vehicleID);\r\n}\r\n\r\nexport async function apiHiringDataSend(data) {\r\n  return await formdataquery(data, \"/Customers/SignUp\");\r\n}\r\n\r\nexport async function apiHiringVehicleSend(data) {\r\n  return await formdataquery(data, \"/Vehicles/Update\");\r\n}\r\n\r\nexport async function apiHiringAllowedMethod(customerId, quoteId) {\r\n  return await jsonQuery(`/Customers/AllowedPaymentMethod?CustomerId=` + customerId + \"&quoteId=\" + quoteId, 'POST', {}, true);\r\n}\r\n\r\nexport async function apiHiringPaymentMethodCBUSend(data) {\r\n  return await formdataquery(data, \"/Customers/PaymentMethodCBU\");\r\n}\r\n\r\nexport async function apiHiringPaymentMethodCardSend(data) {\r\n  return await formdataquery(data, \"/Customers/PaymentMethodCard\");\r\n}\r\n\r\nexport async function apiHiringPictureSend(data) {\r\n  return await formdataquery(data, \"/Vehicles/UploadPictures\");\r\n}\r\n\r\nexport async function apiGetStates() {\r\n  return await rawquery(\"/States/Get\");\r\n}\r\n\r\nexport async function apiGetPreLoadedData(leadID, vehicleID, quoteID) {\r\n  return await rawquery(\"/Leads/GetDataToSignUp?LeadId=\" + leadID + \"&VehicleId=\" + vehicleID + \"&QuoteId=\" + quoteID);\r\n}\r\n\r\nexport async function apiLeadsCompleteFields(data) {\r\n  return await formdataquery(data, \"/Leads/CompleteFields\");\r\n}\r\n\r\nexport async function apiGetQuotationDataById(quoteID) {\r\n  return await rawquery(\"/Quotes?id=\" + quoteID);\r\n}\r\n\r\nexport async function apiGetModelByCodia(code) {\r\n  return await rawquery(\"/InfoAuto/ModelByCodia?codia=\" + code);\r\n}\r\n\r\nexport async function apiGetLeadData(leadID) {\r\n  return await rawquery(\"/Leads/\" + leadID);\r\n}\r\n\r\nexport async function apiVehiclesUpdate(data) {\r\n  return await formdataquery(data, \"/Vehicles/Update\");\r\n}\r\n\r\nexport async function apiLeadsUpdate(data) {\r\n  return await formdataquery(data, \"/Leads/Update\");\r\n}\r\n\r\nexport async function apiCongrats(id) {\r\n  return await rawquery(\"/companies-texts/?insuranceId=\" + id, false);\r\n}\r\n\r\nexport async function apiGetAutoQuestions() {\r\n  return await rawquery(\"/faqs?type=car&_sort=order\", false);\r\n}\r\nexport async function apiGetBrandsMoto() {\r\n  return await query(`/InfoAuto/Brands?type=m`);\r\n}\r\n\r\nexport async function apiGetBrandDetailByNameMoto(searchParams) {\r\n  return await query(`/InfoAuto/BrandByName?type=m`, { searchParams });\r\n}\r\n\r\nexport async function apiGetGroupsByBrandNameMoto(searchParams) {\r\n  return await query(`/InfoAuto/GroupsByBrandName?type=m`, { searchParams });\r\n}\r\n\r\nexport async function apiGetModelsByBrandGroupYearMoto(searchParams) {\r\n  return await query(`/InfoAuto/ModelsByBrandGroupYear?type=m`, { searchParams });\r\n}\r\n\r\nexport async function apiGetYearsByBrandIdMoto(searchParams) {\r\n  return await query(`/InfoAuto/YearsByBrandId?type=m`, { searchParams });\r\n}\r\n\r\nexport async function apiSearchCarInputMoto(value) {\r\n  return await query(`/InfoAuto/Search?type=m&returntype=v&t=` + value );\r\n}\r\n\r\nexport async function apiGetModelByCodiaMoto(code) {\r\n  return await rawquery(\"/InfoAuto/ModelByCodia?type=m&codia=\" + code);\r\n}\r\n\r\nexport async function apiGetMotoQuestions() {\r\n  return await rawquery(\"/faqs?type=moto\", false);\r\n}\r\n\r\nexport async function apiGetOffersMoto() {\r\n  return await rawquery(\"/offers?_sort=order&type=moto\", false);\r\n}\r\n\r\nexport async function apiGetHomeOffers() {\r\n  return await rawquery(\"/offers?_sort=order&type=general\", false);\r\n}\r\n\r\nexport async function apiGetModelsByBrandNameYearMoto(searchParams) {\r\n  return await query(`/InfoAuto/ModelsByBrandNameYear?type=m`, { searchParams });\r\n}\r\n\r\nexport async function apiGetYearsByGroupId(searchParams) {\r\n  return await query(`/InfoAuto/YearsByGroupId`, { searchParams });\r\n}\r\n\r\nexport async function apiGetYearsByCodia(searchParams) {\r\n  return await query(`/InfoAuto/YearsByCodia`, { searchParams });\r\n}\r\n\r\nexport async function apiSignUp(data) {\r\n  return await formdataquery(data, \"/api/users/signUp\");\r\n}\r\n\r\nexport async function apiLogin(data) {\r\n  return await formdataquery(data, \"/api/auth/login\");\r\n}\r\n\r\nexport async function apiSendStakeRequest(data) {\r\n  return await formdataquery(data, \"/api/stake/sendRequest\");\r\n}\r\nexport async function apiSendUnstakeRequest(data) {\r\n  return await formdataquery(data, \"/api/stake/sendUnStakeRequest\");\r\n}\r\nexport async function apiSendUnstakeResponse(data) {\r\n  return await formdataquery(data, \"/api/stake/sendUnStakeResponse\");\r\n}\r\nexport async function apiSendUnstakeRejectResponse(data) {\r\n  return await formdataquery(data, \"/api/stake/sendUnStakeRejectResponse\");\r\n}\r\n\r\nexport async function apiGetStakedata() {\r\n  return await rawquery(\"/api/stake/getStake\");\r\n}\r\nexport async function apiChangeStakeStatus(data) {\r\n  return await formdataquery(data, \"/api/stake/changeStatus\");\r\n}\r\nexport async function apiChangeNewFlagStatus(data) {\r\n  return await formdataquery(data, \"/api/stake/changeNewFlag\");\r\n}\r\nexport async function apiAdminLogin(data) {\r\n  return await formdataquery(data, \"/api/admin/login\");\r\n}\r\nexport async function apiGetStakeDataById(data) {\r\n  return await formdataquery(data, \"/api/stake/getById\");\r\n}\r\nexport async function apiGetHomeData() {\r\n  return await rawquery(\"/api/home\", false);\r\n}","import React, { useState, useEffect, useHistory } from 'react';\r\nimport { FaAlignJustify, FaHome, FaTractor, FaBabyCarriage, FaSteam, FaOutdent,\r\n         FaShareSquare, FaTwitter, FaArrowRight, FaClosedCaptioning, FaTimes, FaQuestion, FaQuestionCircle} from 'react-icons/fa';\r\nimport { Link } from 'react-router-dom';\r\nimport './index.css';\r\nimport $ from 'jquery';\r\nimport {apiGetHomeData} from '../../services/main';\r\n\r\nconst Home = (props) => {\r\n    const [player, setPlayer] = useState([]);\r\n    const [average, setAverage] = useState([]);\r\n    const [playerResult, setPlayerResult] = useState(Array.from({length: 4},()=> Array.from({length: 15}, () => null)));    \r\n    const [color, setColor] = useState([]);\r\n    const [lineColor, setLineColor] = useState([]);\r\n    const [title, setTile] = useState('');\r\n    const [category, setCategory] = useState('');\r\n    const [fase, setFase] = useState('');\r\n    const [heat, setHeat] = useState('');\r\n    const [need, setNeed] = useState([]);\r\n\r\n    let conOrder = [];\r\n    let conPlayerResult = [];\r\n    let playerName = [];\r\n    let conAverage = [];\r\n    let conColor = [];\r\n    let conLineColor = [];\r\n    let conNeed = [];\r\n    let conTitle = '';\r\n    let conCategory = '';\r\n    let conHeat = '';\r\n    let conFase = '';\r\n    useEffect(() => {\r\n        const interval = setInterval(() => {\r\n            getData();\r\n          }, 5000);\r\n          return () => clearInterval(interval);\r\n    }, [playerResult]);\r\n\r\n    const getData = async () => {\r\n        try {\r\n            await apiGetHomeData().then(res => {\r\n                console.log(\"res-----\", res);\r\n                conOrder = res[\"data\"]['msg'][0]['order'];\r\n                conPlayerResult = res[\"data\"]['msg'][0]['playerResult'];\r\n                playerName = res[\"data\"]['msg'][0]['playerName'];\r\n                conAverage = res[\"data\"]['msg'][0]['average'];\r\n                conColor = res[\"data\"]['msg'][0]['color'];\r\n                conLineColor = res[\"data\"]['msg'][0]['lineColor'];\r\n                conNeed = res[\"data\"]['msg'][0]['need'];\r\n                conTitle = res[\"data\"]['msg'][0]['title'];\r\n                conCategory = res[\"data\"]['msg'][0]['category'];\r\n                conHeat = res[\"data\"]['msg'][0]['heat'];\r\n                conFase = res[\"data\"]['msg'][0]['fase'];\r\n                \r\n            })\r\n            .catch(err => {\r\n                console.log(\"err-----\", err);\r\n            })\r\n            await setPlayer(playerName);\r\n            await setColor(conColor);\r\n            await setLineColor(conLineColor);\r\n            await setNeed(conNeed);\r\n            await setAverage(conAverage);\r\n            await setPlayerResult(conPlayerResult);\r\n            await setTile(conTitle);\r\n            await setCategory(conCategory);\r\n            await setHeat(conHeat);\r\n            await setFase(conFase);\r\n        } catch (e) {\r\n            console.error('Error: ', e);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"background\">\r\n            <h3 className='font-weight-bold'>{title}</h3> <span className='sub-title'>{`Categoria:  ${category}, Fase: ${fase}, Heat: ${heat}`}</span>\r\n            <hr className='text-grey' />\r\n            <div>\r\n                <div>\r\n                    <div className=\"d-flex justify-content-between w-100\">\r\n                        <div className=\"d-flex\">\r\n                            <div className={color[0]}></div><h5 className=\"align-self-center pl-3\">{player[0]}</h5>\r\n                        </div>\r\n                        <div className=\"align-self-center\"><h6 className='d-flex'>{Number(average[0]).toFixed(2)} <div className='pl-5 w-150'></div></h6></div>\r\n                        {/* <div className=\"align-self-center\"><h6></h6></div> */}\r\n                    </div>\r\n                    <div className=\"d-flex justify-content-between w-100\">\r\n                        <div className=\"d-flex\">\r\n                            <div className={color[1]}></div><h5 className=\"align-self-center pl-3\">{player[1]}</h5>\r\n                        </div>\r\n                        <div className=\"align-self-center\"><h6 className='d-flex'>{Number(average[1]).toFixed(2)} <div className='pl-5 w-150 text-center text-red'><span>{Number(need[0]).toFixed(2)}</span></div></h6></div>\r\n                        {/* <div className=\"align-self-center\"><h6>{need[0]}</h6></div> */}\r\n                    </div>\r\n                    <div className=\"d-flex justify-content-between w-100\">\r\n                        <div className=\"d-flex\">\r\n                            <div className={color[2]}></div><h5 className=\"align-self-center pl-3\">{player[2]}</h5>\r\n                        </div>\r\n                        <div className=\"align-self-center\"><h6 className='d-flex'>{Number(average[2]).toFixed(2)} <div className='pl-5 w-150 text-center text-red'><span>{Number(need[1]).toFixed(2)}</span></div></h6></div>\r\n                        {/* <div className=\"align-self-center\"><h6>{need[1]}</h6></div> */}\r\n                    </div>\r\n                    <div className=\"d-flex justify-content-between w-100\">\r\n                        <div className=\"d-flex\">\r\n                            <div className={color[3]}></div><h5 className=\"align-self-center pl-3\">{player[3]}</h5>\r\n                        </div>\r\n                        <div className=\"align-self-center\"><h6 className='d-flex'>{Number(average[3]).toFixed(2)} <div className='pl-5 w-150 text-center text-red'><span>{Number(need[2]).toFixed(2)}</span></div></h6></div>\r\n                        {/* <div className=\"align-self-center\"><h6>{need[2]}</h6></div> */}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"d-flex pt-3\">\r\n                <div className='w-25'>\r\n                    <div className={lineColor[0]}></div>\r\n                    {playerResult[0].map((result, item) => {\r\n                        return (<h6 className='text-center'>{result && Number(result).toFixed(2)}</h6>)\r\n                    })}\r\n                </div>\r\n                <div className='w-25'>\r\n                    <div className={lineColor[1]}></div>\r\n                    {playerResult[1].map((result, item) => {\r\n                        return (<h6 className='text-center'>{result && Number(result).toFixed(2)}</h6>)\r\n                    })}\r\n                </div>\r\n                <div className='w-25'>\r\n                    <div className={lineColor[2]}></div>\r\n                    {playerResult[2].map((result) => {\r\n                        return <h6 className='text-center'>{result && Number(result).toFixed(2)}</h6>\r\n                    })}\r\n                </div>\r\n                <div className='w-25'>\r\n                    <div className={lineColor[3]}></div>\r\n                    {playerResult[3].map((result) => {\r\n                        return <h6 className='text-center'>{result && Number(result).toFixed(2)}</h6>\r\n                    })}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home;\r\n","import React, { useState, useEffect, useHistory } from 'react';\r\nimport { FaAlignJustify, FaHome, FaTractor, FaBabyCarriage, FaSteam, FaOutdent,\r\n         FaShareSquare, FaTwitter, FaArrowRight, FaClosedCaptioning, FaTimes, FaQuestion, FaQuestionCircle} from 'react-icons/fa';\r\nimport { Link } from 'react-router-dom';\r\nimport './index.css';\r\nimport $ from 'jquery';\r\nimport { GoogleSpreadsheet } from \"google-spreadsheet\";\r\nimport {apiGetHomeData} from '../../services/main';\r\n\r\nconst Web2 = (props) => {\r\n    \r\n    const [player, setPlayer] = useState([]);\r\n    const [color, setColor] = useState([]);\r\n    // const [average, setAverage] = useState([]);\r\n    const [playerResult, setPlayerResult] = useState(Array.from({length: 4},()=> Array.from({length: 4}, () => null)));\r\n    \r\n    // const [title, setTile] = useState('');\r\n    const [category, setCategory] = useState('');\r\n    const [fase, setFase] = useState('');\r\n    const [heat, setHeat] = useState('');\r\n    \r\n    const playerName = [];\r\n    let conPlayerResult = [];\r\n    // let conAverage = [];\r\n    let conColor = [];\r\n    let conCategory = '';\r\n    let conFase = '';\r\n    let conHeat = '';\r\n    \r\n    useEffect(() => {\r\n        // getData();\r\n        const interval = setInterval(() => {\r\n            getData();\r\n          }, 5000);\r\n          return () => clearInterval(interval);\r\n    }, [playerResult]);\r\n\r\n    \r\n\r\n    const getData = async () => {\r\n        try {\r\n            await apiGetHomeData().then(res => {\r\n                console.log(\"res-----\", res);\r\n                conPlayerResult = res[\"data\"]['msg'][0]['web2Result'];\r\n                // conAverage = res[\"data\"]['msg'][0]['average'];\r\n                conColor = res[\"data\"]['msg'][0]['color'];  \r\n                conCategory = res[\"data\"]['msg'][0]['category'];            \r\n                conFase = res[\"data\"]['msg'][0]['fase'];            \r\n                conHeat = res[\"data\"]['msg'][0]['heat'];            \r\n            })\r\n            .catch(err => {\r\n                console.log(\"err-----\", err);\r\n            })\r\n            await setPlayerResult(conPlayerResult);\r\n            // await setAverage(conAverage);\r\n            await setColor(conColor);    \r\n            await setCategory(conCategory);    \r\n            await setFase(conFase);    \r\n            await setHeat(conHeat);    \r\n        } catch (e) {\r\n            console.error('Error: ', e);\r\n        }\r\n    }\r\n    return (\r\n        <>\r\n            <div className=\"background-green\">\r\n                {/* <h3 className='test-font font-weight-bold'>{title}</h3> <span className='sub-title'>{`Categoria:  ${category}, Fase: ${fase}, Heat: ${heat}`}</span>\r\n                <hr className='text-black' /> */}\r\n                <div className='d-flex flex-wrap main-layout'>\r\n                    <div className='first-layout d-flex'>\r\n                        <div className='align-self-end mr-1'>\r\n                            <div className={color[0]}></div>\r\n                            <div className={color[1]}></div>\r\n                            <div className={color[2]}></div>\r\n                            <div className={color[3]}></div>\r\n                        </div>\r\n                        <div className='background-grey pane-1'>\r\n                            <div className='noti-title p-1'>\r\n                                <p><span>{category}</span></p>\r\n                                <p><span>{fase}</span></p>\r\n                                <p><span>HEAT: {heat}</span></p>\r\n                            </div>\r\n                            <div className='background-dark-grey p-0'>\r\n                                <table className='table table-dark table-bordered mb-0 panel-first'>\r\n                                    <tbody>\r\n                                        <tr>\r\n                                            <td><p>{player[0]}</p></td>\r\n                                            <td><span>{Number(playerResult[0][2]).toFixed(2)}</span></td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <td><p>{player[1]}</p></td>\r\n                                            <td><span>{Number(playerResult[1][2]).toFixed(2)}</span></td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <td><p>{player[2]}</p></td>\r\n                                            <td><span>{Number(playerResult[2][2]).toFixed(2)}</span></td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <td><p>{player[3]}</p></td>\r\n                                            <td><span>{Number(playerResult[3][2]).toFixed(2)}</span></td>\r\n                                        </tr>\r\n                                    </tbody>\r\n                                </table>\r\n                                {/* <div className='d-flex justify-content-between pt-3'>\r\n                                    <p>Rodrigo Lopes</p>\r\n                                    <span>12.56</span>\r\n                                </div>\r\n                                <div className='d-flex justify-content-between'>\r\n                                    <p>Daniel Fosenca</p>\r\n                                    <span>12.56</span>\r\n                                </div>\r\n                                <div className='d-flex justify-content-between'>\r\n                                    <p>Ricardo Rosmaninho</p>\r\n                                    <span>12.56</span>\r\n                                </div>\r\n                                <div className='d-flex justify-content-between'>\r\n                                    <p>Joel Rodrigues</p>\r\n                                    <span>12.56</span>\r\n                                </div> */}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className='d-flex other-layout'>\r\n                        <div className='align-self-end ml-1 mt-3 panel-1'>\r\n                            <div>\r\n                                <table className='table table-dark table-bordered mb-0 panel-second'>\r\n                                    <thead>\r\n                                        <tr className='w-title'>\r\n                                            <td className='text-center font-weight-bold'>W<span>1</span></td>\r\n                                            <td className='text-center font-weight-bold'>W<span>2</span></td>\r\n                                        </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                        <tr>\r\n                                            <td><span className='font-weight-bold'>{Number(playerResult[0][0]).toFixed(2)}</span></td>\r\n                                            <td><span className='font-weight-bold'>{Number(playerResult[0][1]).toFixed(2)}</span></td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <td><span className='font-weight-bold'>{Number(playerResult[1][0]).toFixed(2)}</span></td>\r\n                                            <td><span className='font-weight-bold'>{Number(playerResult[1][1]).toFixed(2)}</span></td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <td><span className='font-weight-bold'>{Number(playerResult[2][0]).toFixed(2)}</span></td>\r\n                                            <td><span className='font-weight-bold'>{Number(playerResult[2][1]).toFixed(2)}</span></td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <td><span className='font-weight-bold'>{Number(playerResult[3][0]).toFixed(2)}</span></td>\r\n                                            <td><span className='font-weight-bold'>{Number(playerResult[3][1]).toFixed(2)}</span></td>\r\n                                        </tr>\r\n                                    </tbody>\r\n                                </table>\r\n                            </div>\r\n                        </div>\r\n                        <div className='align-self-end ml-1 mr-2 mt-3 font-weight-bold'>\r\n                            <table className='table table-dark table-bordered mb-0'>\r\n                                <thead>\r\n                                    <tr className='w-title'>\r\n                                        <td>Need</td>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    <tr>\r\n                                        <td><span>{Number(playerResult[0][3]).toFixed(2)}</span></td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td><span className='font-weight-bold'>{Number(playerResult[1][3]).toFixed(2)}</span></td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td><span className='font-weight-bold'>{Number(playerResult[2][3]).toFixed(2)}</span></td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td><span className='font-weight-bold'>{Number(playerResult[3][3]).toFixed(2)}</span></td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>\r\n                            {/* <div className='panel-3 background-dark-grey ml-1'>\r\n                                <div className='w-title'>\r\n                                    <p>Need</p>\r\n                                </div>\r\n                                <div>\r\n                                    <span>0</span>\r\n                                </div>\r\n                                <div>\r\n                                    <span>0.99</span>\r\n                                </div>\r\n                                <div>\r\n                                    <span>0.99</span>\r\n                                </div>\r\n                                <div>\r\n                                    <span>0.99</span>\r\n                                </div>\r\n                            </div> */}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Web2;\r\n","import React, { useEffect } from 'react';\nimport { Switch, Route, Redirect, useLocation } from 'react-router-dom';\n\nimport './App.css';\nimport \"./css/tailwind.output.css\";\nimport './font/font.css';\nimport './css/fontawesome-free-6.0.0-beta3-web/css/fontawesome.css';\nimport './css/fontawesome-free-6.0.0-beta3-web/css/brands.css';\nimport './css/fontawesome-free-6.0.0-beta3-web/css/solid.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'react-notifications/lib/notifications.css';\n\nimport Home from './pages/Home';\nimport Web2 from './pages/Web2';\n\nfunction App() {\n  const location = useLocation();\n  useEffect(() => {\n    localStorage.setItem('reward', 0);\n  }, [location]);\n\n  return (\n    <React.Fragment>\n      <Switch>\n        <Redirect from=\"/\" exact to=\"/home\" />\n        <Route path=\"/home\" exact component={Home} />\n        <Route path=\"/web2\" exact component={Web2} />\n      </Switch>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker === null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { BrowserRouter } from 'react-router-dom';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nserviceWorker.register();\n\n"],"sourceRoot":""}